Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4525fa91-4abf-4ddf-9e17-6b4e30c0bffa\" name=\"Changes\" comment=\"Задача 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"module-1\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PpCBK0cRZycMyOZCK6fqaL9xkr\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Task20\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"module1.Task20\" />\r\n      <module name=\"Exercices\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"module1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Task21\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"module1.Task21\" />\r\n      <module name=\"Exercices\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"module1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Task20\" />\r\n        <item itemvalue=\"Application.Task21\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4525fa91-4abf-4ddf-9e17-6b4e30c0bffa\" name=\"Changes\" comment=\"\" />\r\n      <created>1684144503747</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1684144503747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Задача 1\">\r\n      <created>1684146164117</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684146164117</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Задача 1\">\r\n      <created>1684146267828</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684146267828</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Задача 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Задача 1\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/module1/Task19.java</url>\r\n          <line>10</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,7 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="4525fa91-4abf-4ddf-9e17-6b4e30c0bffa" name="Changes" comment="Задача 1">
+      <change afterPath="$PROJECT_DIR$/src/Task2/Direction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Task2/Robot.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Task2/Task2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Task3/Task3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/module2/Task1.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/module1/Task30.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/module1/Task30.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -15,6 +21,7 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Enum" />
         <option value="Class" />
       </list>
     </option>
@@ -57,7 +64,7 @@
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
   }
 }</component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Application.Task20">
     <configuration name="Task20" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="module1.Task20" />
       <module name="Exercices" />
Index: src/Task2/Direction.java
===================================================================
diff --git a/src/Task2/Direction.java b/src/Task2/Direction.java
new file mode 100644
--- /dev/null	
+++ b/src/Task2/Direction.java	
@@ -0,0 +1,7 @@
+package Task2;
+public enum Direction {
+    UP,
+    RIGHT,
+    DOWN,
+    LEFT;
+}
\ No newline at end of file
Index: src/Task3/Task3.java
===================================================================
diff --git a/src/Task3/Task3.java b/src/Task3/Task3.java
new file mode 100644
--- /dev/null	
+++ b/src/Task3/Task3.java	
@@ -0,0 +1,50 @@
+package Task3;
+
+public class Task3 {
+    public static void main(String[] args) {
+        ComplexNumber a = new ComplexNumber(7, 1);
+        ComplexNumber b = new ComplexNumber(7, 1);
+        System.out.println(a.equals(b));
+        System.out.println(a.hashCode());
+        System.out.println(b.hashCode());
+    }
+    public static class ComplexNumber {
+
+        public ComplexNumber(double re, double im) {
+            this.re = re;
+            this.im = im;
+        }
+        private double re;
+        private double im;
+        public double getRe() {
+            return re;
+        }
+        public double getIm() {
+            return im;
+        }
+
+        @Override
+        public boolean equals(Object obj) {
+            if (this == obj) return true; // является ли переданный объект ссылкой на текущий объект
+            if (obj == null || getClass() != obj.getClass()) return false; // Если объект пустой или отличается от класса текущего обхекта, то false
+            ComplexNumber that = (ComplexNumber) obj; // Приводим переданынй объект к типу ComplexNumber и сохраняем его в переменную that
+            return Double.compare(that.re, re) == 0 && Double.compare(that.im, im) == 0; // метод Double.compare() Сравнивает значение данного объекта Double с другим объектом Doublе
+            //Он возвращает целое число, которое может принимать три значения: отрицательное, если первое значение меньше второго; ноль, если оба значения равны; и положительное, если первое значение больше второго
+        }
+
+        @Override
+        public int hashCode() {
+            final int a= 31;
+            double result = 4;
+            result = result * a * getRe();
+            result = result * a * getIm();
+            return (int) result; // Преобразуем в инт потому что хэщкод возвращает инт!
+        }
+    }
+
+
+
+
+
+
+}
\ No newline at end of file
Index: src/Task2/Robot.java
===================================================================
diff --git a/src/Task2/Robot.java b/src/Task2/Robot.java
new file mode 100644
--- /dev/null	
+++ b/src/Task2/Robot.java	
@@ -0,0 +1,96 @@
+package Task2;
+
+public class Robot {
+    private static Direction direction;//создаю объект взгляда
+
+    public Direction getDirection() { // геттер, для текущего направления взгляда
+        return direction;
+    }
+    private int x; //начальная координата х
+    private int y;// начальная координата у
+
+    public int getX() { // геттер для х
+        return x;
+    }
+    public int getY() { // геттер для у
+        return y;
+    }
+    public Robot(Direction direction, int x, int y) {  //конструктор класса Робот, для задания начального положения
+        this.direction = direction;
+        this.x = x;
+        this.y = y;
+    }
+
+    public static void turnLeft() {
+        if (direction == Direction.LEFT) {
+            direction = Direction.DOWN;
+        } else if (direction == Direction.RIGHT) {
+            direction = Direction.UP;
+        } else if (direction == Direction.UP) {
+            direction = Direction.LEFT;
+        } else if (direction == Direction.DOWN) {
+            direction = Direction.RIGHT;
+        }
+    }
+
+    public static void turnRight() {
+        if (direction == Direction.LEFT) {
+            direction = Direction.UP;
+        } else if (direction == Direction.RIGHT) {
+            direction = Direction.DOWN;
+        } else if (direction == Direction.UP) {
+            direction = Direction.RIGHT;
+        } else if (direction == Direction.DOWN) {
+            direction = Direction.LEFT;
+        }
+    }
+
+    public void stepForward() {
+        // шаг в направлении взгляда
+        if (direction == Direction.UP) y++;
+        if (direction == Direction.RIGHT) x++;
+        if (direction == Direction.DOWN) y--;
+        if (direction == Direction.LEFT) x--;
+    }
+
+    public static void moveRobot(Robot robot, int toX, int toY) {
+        int x = robot.getX();
+        int y = robot.getY();
+        System.out.println("Начальное положение: \nвзгляд: " + direction.toString() + "; x:" + x + "; y: " + y);
+        if (x <= toX) {
+            while (direction != Direction.RIGHT) {
+                turnLeft();
+            }
+            while (x != toX) {
+                robot.stepForward();
+                x++;
+            }
+        } else {
+            while (direction != Direction.LEFT) {
+                turnLeft();
+            }
+            while (x != toX) {
+                robot.stepForward();
+                x--;
+            }
+        }
+        if (y <= toY) {
+            while (direction != Direction.UP) {
+                turnLeft();
+            }
+            while (y != toY) {
+                robot.stepForward();
+                y++;
+            }
+        } else {
+            while (direction != Direction.DOWN) {
+                turnLeft();
+            }
+            while (y != toY) {
+                robot.stepForward();
+                y--;
+            }
+        }
+        System.out.println("Пришли в положение:\nвзгляд: " + direction.toString() + "; x:" + x + "; y: " + y);
+    }
+}
Index: src/module2/Task1.java
===================================================================
diff --git a/src/module2/Task1.java b/src/module2/Task1.java
new file mode 100644
--- /dev/null	
+++ b/src/module2/Task1.java	
@@ -0,0 +1,24 @@
+package module2;
+public class Task1 {
+    public static void main(String[] args) {
+        Day d = Day.SUNDAY;
+        System.out.println(d.getRusName());
+        System.out.println("Это выходной? " + d.isWeekend());
+    }
+}
+enum Day {
+    MONDAY("Понедельник"), TUESDAY("Вторник"), WEDNESDAY("Среда"), THURSDAY("Четверг"), FRIDAY("Пятница"), SATURDAY("Суббота"), SUNDAY("Воскресенье");
+
+    private String translate;
+    Day(String translate) {
+        this.translate = translate;
+    }
+
+    public boolean isWeekend() {
+        return this == SATURDAY || this == SUNDAY;
+    }
+
+    public String getRusName() {
+        return translate;
+    }
+}
\ No newline at end of file
Index: src/Task2/Task2.java
===================================================================
diff --git a/src/Task2/Task2.java b/src/Task2/Task2.java
new file mode 100644
--- /dev/null	
+++ b/src/Task2/Task2.java	
@@ -0,0 +1,9 @@
+package Task2;
+
+public class Task2 {
+    public static void main(String[] args) {
+        Robot robot = new Robot(Direction.UP, 0, 0);
+        Robot.moveRobot(robot, 3, -7);
+    }
+}
+
Index: src/module1/Task30.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package module1;\r\nimport java.util.regex.Pattern;\r\nimport java.util.regex.Matcher;\r\npublic class Task30 {\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(isGmailOrOutlook(\"hhui776gg@gmail.com\"));\r\n\t}\r\n\r\n\tpublic static boolean isGmailOrOutlook(String email) {\r\n\t\tPattern p = Pattern.compile(\"^[a-zA-Z_0-9]+@(gmail||outlook)\\\\.com$\");  //создаем регулярное выражение.\r\n\t\tMatcher m = p.matcher(email); //сравниваем регулярное выражение с адресом почты\r\n\t\treturn m.matches(); //метод возвращает true, если адрес почтв соотв. регулярно выражению\r\n\t}\r\n}
===================================================================
diff --git a/src/module1/Task30.java b/src/module1/Task30.java
--- a/src/module1/Task30.java	
+++ b/src/module1/Task30.java	
@@ -2,6 +2,7 @@
 import java.util.regex.Pattern;
 import java.util.regex.Matcher;
 public class Task30 {
+
 	public static void main(String[] args) {
 		System.out.println(isGmailOrOutlook("hhui776gg@gmail.com"));
 	}
